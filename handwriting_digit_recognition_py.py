# -*- coding: utf-8 -*-
"""Handwriting Digit Recognition.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uihtSGOQNGoZRnnMahlxHtI0Bsju4Q4G
"""

import tensorflow
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense, Flatten

(X_train, y_train), (X_test, y_test) = keras.datasets.mnist.load_data()

X_train.shape

X_test.shape

y_train

y_test

import matplotlib.pyplot as plt
plt.imshow (X_train[64])

X_train = X_train/255
X_test = X_test/255

X_train[0]

model = Sequential()
model.add(Flatten(input_shape=(28,28)))
model.add(Dense(128,activation='relu'))
model.add(Dense(32,activation='relu'))
model.add(Dense(10,activation='softmax'))

model.summary()

model.compile(loss='sparse_categorical_crossentropy', optimizer='Adam', metrics=['accuracy'])

history= model.fit(X_train,y_train, epochs=10,validation_split=0.2)

y_prob= model.predict(X_test)

y_pred=y_prob.argmax(axis=1)

import tensorflow as tf
cm = tf.math.confusion_matrix(labels=y_test,predictions=y_pred)
cm

import seaborn as sn
plt.figure(figsize = (10,7))
sn.heatmap(cm, annot= True, fmt='d')
plt.xlabel('Predicted')
plt.ylabel('Truth')

from sklearn.metrics import accuracy_score
accuracy_score(y_test,y_pred)

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])

plt.imshow(X_test[20])

model.predict(X_test[20].reshape(1,28,28)).argmax(axis=1)